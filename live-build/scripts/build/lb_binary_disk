#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2011 Daniel Baumann <daniel@debian.org>
##
## live-build comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
. "${LB_BASE:-/usr/share/live/build}"/scripts/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'install disk information into binary')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

case "${LB_BINARY_IMAGES}" in
	iso*|usb*)
		;;
	*)
		exit 0
		;;
esac

Echo_message "Begin installing disk information..."

# Requiring stage file
Require_stagefile .stage/config .stage/bootstrap

# Checking stage file
Check_stagefile .stage/binary_disk

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

mkdir -p binary/.disk

ARCHITECTURE="$(echo ${LB_ARCHITECTURES} | sed -e 's| |/|g')"
DISTRIBUTION="$(echo ${LB_DISTRIBUTION} | cut -b 1 | tr '[a-z]' '[A-Z]')"
DISTRIBUTION="${DISTRIBUTION}$(echo ${LB_DISTRIBUTION} | cut -b 2-)"
eval VERSION="$`echo RELEASE_${LB_DISTRIBUTION}`"

TITLE="Debian GNU/Linux"
case "${LB_MODE}" in
	debian)
		STRING="Official Snapshot ${ARCHITECTURE}"
		TRACE="project/trace/ftp-master.debian.org"
		;;

	ubuntu)
		TITLE="Ubuntu"
		STRING="Build ${ARCHITECTURE}"
		TRACE=""
		;;

	*)
		STRING="Snapshot ${ARCHITECTURE}"
		TRACE=""
		;;
esac

if [ -n "${TRACE}" ]
then
	echo "$(wget -q ${LB_PARENT_MIRROR_BOOTSTRAP}/${TRACE} -O - | head -n 1)" \
	> binary/.disk/archive_trace
fi

case "${LB_INITRAMFS}" in
	casper)
		for INITRD in binary/casper/initrd.img*
		do
			mkdir uuid
			cd uuid

			zcat "../${INITRD}" | cpio --quiet -id conf/uuid.conf

			if [ -e conf/uuid.conf ]
			then
				mv conf/uuid.conf "../binary/.disk/casper-uuid${INITRD#binary/casper/initrd.img}"
			else
				Echo_warning "Failed to find casper uuid.conf in '${INITRD}'"
			fi

			cd ..
			rm -rf uuid
		done
		;;
esac

case "${LB_DEBIAN_INSTALLER}" in
	cdrom)
		echo "main" > binary/.disk/base_components

		touch binary/.disk/base_installable

		echo "full_cd" > binary/.disk/cd_type

		echo "${TITLE} ${VERSION} \"${DISTRIBUTION}\" - ${STRING} LIVE/CD Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

		cp "${LB_BASE}"/data/debian-cd/${LB_PARENT_DISTRIBUTION}/${LB_ARCHITECTURES}_udeb_include binary/.disk/udeb_include
		;;

	true|netinst|live)
		echo "main" > binary/.disk/base_components

		touch binary/.disk/base_installable

		echo "not_complete" > binary/.disk/cd_type

		if [ "${LB_DEBIAN_INSTALLER}" = "live" ]
		then
			echo "${TITLE} ${VERSION} \"${DISTRIBUTION}\" - ${STRING} LIVE/INSTALL Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info
		else
			echo "${TITLE} ${VERSION} \"${DISTRIBUTION}\" - ${STRING} LIVE/NETINST Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

		fi

		cp "${LB_BASE}"/data/debian-cd/${LB_PARENT_DISTRIBUTION}/${LB_ARCHITECTURES}_netinst_udeb_include binary/.disk/udeb_include

		if [ "${LB_DEBIAN_INSTALLER}" = "live" ]
		then
			echo "live-installer" >> binary/.disk/udeb_include
		fi
		;;

	businesscard)
		echo "main" > binary/.disk/base_components

		echo "not_complete" > binary/.disk/cd_type

		echo "${TITLE} ${VERSION} \"${DISTRIBUTION}\" - ${STRING} LIVE/BC Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info

		cp "${LB_BASE}"/data/debian-cd/${LB_PARENT_DISTRIBUTION}/${LB_ARCHITECTURES}_businesscard_udeb_include binary/.disk/udeb_include
		;;

	false)
		echo "${TITLE} ${VERSION} \"${DISTRIBUTION}\" - ${STRING} LIVE Binary $(date +%Y%m%d-%H:%M)" > binary/.disk/info
		;;
esac

# Creating stage file
Create_stagefile .stage/binary_disk
